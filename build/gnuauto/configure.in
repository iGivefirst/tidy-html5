# configure.in - HTML TidyLib GNU autoconf input file
#
# Copyright (c) 2003-2004 World Wide Web Consortium
# (Massachusetts Institute of Technology, European Research 
# Consortium for Informatics and Mathematics, Keio University).
# All Rights Reserved.
#
# CVS Info :
#
#   $Author: arnaud02 $ 
#   $Date: 2008/03/24 21:08:16 $ 
#   $Revision: 1.4 $ 
#

AC_INIT([include/tidy.h])

# Making releases:
# 
#   TIDY_MICRO_VERSION += 1;
#   TIDY_INTERFACE_AGE += 1;
#   TIDY_BINARY_AGE += 1;
# 
# if any functions have been added, set TIDY_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set TIDY_BINARY_AGE and TIDY_INTERFACE_AGE to 0.
# 
TIDY_MAJOR_VERSION=0
TIDY_MINOR_VERSION=99
TIDY_MICRO_VERSION=0
TIDY_INTERFACE_AGE=0
TIDY_BINARY_AGE=0

LIBTIDY_VERSION=$TIDY_MAJOR_VERSION.$TIDY_MINOR_VERSION.$TIDY_MICRO_VERSION

AC_SUBST(LIBTIDY_VERSION)

# libtool versioning
# 
LT_RELEASE=$TIDY_MAJOR_VERSION.$TIDY_MINOR_VERSION
LT_CURRENT=`expr $TIDY_MICRO_VERSION - $TIDY_INTERFACE_AGE`
LT_REVISION=$TIDY_INTERFACE_AGE
LT_AGE=`expr $TIDY_BINARY_AGE - $TIDY_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AM_INIT_AUTOMAKE(tidy,$LIBTIDY_VERSION)

# Checks for programs.

# =============================================
# AC_PROG_CC has a habit of adding -g to CFLAGS
# 
save_cflags="$CFLAGS"

AC_PROG_CC
if test "x$GCC" = "xyes"; then
	WARNING_CFLAGS="-Wall"
else
	WARNING_CFLAGS=""
fi
AC_SUBST(WARNING_CFLAGS)

debug_build=no
AC_ARG_ENABLE(debug,[  --enable-debug          add -g (instead of -O2) to CFLAGS],[
	if test "x$enableval" = "xyes"; then
		debug_build=yes
	fi
])
if test $debug_build = yes; then
	CFLAGS="$save_cflags -g"
else
	CFLAGS="$save_cflags"
fi
# 
# =============================================

AC_PROG_CPP
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_LIBTOOL
AC_PROG_MAKE_SET

support_access=yes
AC_ARG_ENABLE(access,[  --enable-access         support accessibility checks],[
	if test "x$enableval" = "xno"; then
		support_access=no
	fi
])
if test $support_access = yes; then
	AC_DEFINE(SUPPORT_ACCESSIBILITY_CHECKS,1)
else
	AC_DEFINE(SUPPORT_ACCESSIBILITY_CHECKS,0)
fi

support_utf16=yes
AC_ARG_ENABLE(utf16,[  --enable-utf16          support UTF-16 encoding],[
	if test "x$enableval" = "xno"; then
		support_utf16=no
	fi
])
if test $support_utf16 = yes; then
	AC_DEFINE(SUPPORT_UTF16_ENCODINGS,1)
else
	AC_DEFINE(SUPPORT_UTF16_ENCODINGS,0)
fi

support_asian=yes
AC_ARG_ENABLE(asian,[  --enable-asian          support asian encodings],[
	if test "x$enableval" = "xno"; then
		support_asian=no
	fi
])
if test $support_asian = yes; then
	AC_DEFINE(SUPPORT_ASIAN_ENCODINGS,1)
else
	AC_DEFINE(SUPPORT_ASIAN_ENCODINGS,0)
fi

# TODO: this defines "WITH_DMALLOC" but tidy expects "DMALLOC"
#       need to do: #if defined(DMALLOC) || defined(WITH_DMALLOC)
# 
AM_WITH_DMALLOC

### Check for pcre regex library.

REGEX_LIBS=

### Check for pcre/regex library.

## check for pcre-config, and if so, set XTRA_CXXFLAGS appropriately
AC_CHECK_PROG(WITH_PCRE_CONFIG, pcre-config, yes, no)
if test $WITH_PCRE_CONFIG = yes ; then
  XTRA_CXXFLAGS="$XTRA_CXXFLAGS $(pcre-config --cflags)"
fi

## NB: no need to do separate check for pcre.h header -- checking macros is good enough
AC_CACHE_CHECK([whether pcre.h defines the macros we need], [ac_cv_pcre_h_macros_present], [
  AC_EGREP_CPP([PCRE_HAS_MACROS_WE_NEED], [
#include <pcre.h>
#if defined (PCRE_INFO_NAMECOUNT) \
  && defined (PCRE_INFO_NAMEENTRYSIZE) \
  && defined (PCRE_INFO_NAMETABLE)
PCRE_HAS_MACROS_WE_NEED
#endif], ac_cv_pcre_h_macros_present=yes, ac_cv_pcre_h_macros_present=no)])
WITH_PCRE="$ac_cv_pcre_h_macros_present"

REGEX_LIBS=

using_pcre=no
using_regex=no

if test "$WITH_PCRE" = yes; then
  if test "$WITH_PCRE_CONFIG" = yes; then
    REGEX_LIBS=$(pcre-config --libs)
  else
    REGEX_LIBS=-lpcre
  fi
  save_LIBS="$LIBS"
  LIBS="$REGEX_LIBS $LIBS"
  AC_CHECK_FUNCS(pcre_compile, [using_pcre=yes
    AC_DEFINE(HAVE_PCRE, 1, [Define if PCRE library is available.])], [
      REGEX_LIBS=
      warn_pcre="PCRE library not found.  This will result in some loss of functionality for the regular expression matching functions."
      AC_MSG_WARN([$warn_pcre])])
  LIBS="$save_LIBS"
else
  warn_pcre="PCRE library not found.  This will result in some loss of functionality for the regular expression matching functions."
  AC_MSG_WARN([$warn_pcre])
fi

AC_CHECK_FUNCS(regexec, [using_regex=yes], [
  AC_CHECK_LIB(regex, regexec, [using_regex=yes
    REGEX_LIBS="-lregex $REGEX_LIBS"], [
      warn_regex="regular expression functions not found.  The regular expression matching functions will be disabled."
      AC_MSG_WARN([$warn_regex])])])

if test "$using_regex" = yes; then
  AC_DEFINE(HAVE_REGEX, 1, [Define if regex library is available.])
  LIBS="$REGEX_LIBS $LIBS"
fi

AC_SUBST(REGEX_LIBS)

AC_MSG_NOTICE([

 REGEX libraries:             $REGEX_LIBS
 ALL   libraries:             $LIBS
])

AC_OUTPUT([
	Makefile
	src/Makefile
	console/Makefile
	include/Makefile
])

if test -n "$warn_regex"; then
  AC_MSG_WARN([$warn_regex])
  warn_msg_printed=true
fi
